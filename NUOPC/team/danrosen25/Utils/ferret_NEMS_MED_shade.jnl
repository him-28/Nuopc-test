 ! FERRET v6.96 Script
 ! >ferret -gif -script ferret_LIS_HIST_Noah.3.3_output.jnl [LIS_HIST input file]
 ! Author: Daniel Rosen
 ! Organization: NESII/CIRES/NOAA
 ! Email: daniel.rosen@noaa.gov
 ! Date: 2017-01-27

CANCEL MODE LOGO

! Set Parameters
DEFINE SYMBOL lonvar lon_center
DEFINE SYMBOL latvar lat_center

! Read in command line arguments
DEFINE SYMBOL varfile $1%missing% ! [variables.dat]
DEFINE SYMBOL datfile $2%missing% ! [field_med_from_cmp_field.nc]
DEFINE SYMBOL lonfile $3%missing% ! [array_med_cmp_grid_coord1.nc]
DEFINE SYMBOL latfile $4%missing% ! [array_med_cmp_grid_coord2.nc]
DEFINE SYMBOL slice   $5%missing% ! [slice]

! Check Usage
IF `"($varfile)" EQ "missing"` THEN
 MESSAGE/ERROR ERROR: Missing Variable File
 MESSAGE/ERROR ($usage)
 QUIT
ENDIF
! Check Usage
IF `"($datfile)" EQ "missing"` THEN
 MESSAGE/ERROR ERROR: Missing Data File
 MESSAGE/ERROR ($usage)
 QUIT
ENDIF
IF `STRCMP("($lonfile)","missing") EQ 0` THEN
 MESSAGE/ERROR ERROR: Missing Longitutde File
 MESSAGE/ERROR ($usage)
 QUIT
ENDIF
IF `STRCMP("($latfile)","missing") EQ 0` THEN
 MESSAGE/ERROR ERROR: Missing Latitude File
 MESSAGE/ERROR ($usage)
 QUIT
ENDIF
IF `STRCMP("($slice)","missing") EQ 0` THEN
 MESSAGE/ERROR ERROR: Missing Slice
 MESSAGE/ERROR ($usage)
 QUIT
ENDIF

! Check Format
IF `STRINDEX("($datfile)","field_med_") NE 1` THEN
 MESSAGE/ERROR ERROR: Data file  must begin with field_med [($datfile)]
 MESSAGE/ERROR ($usage)
 QUIT
ENDIF
IF `STRINDEX("($lonfile)","array_med") NE 1` THEN
 MESSAGE/ERROR ERROR: Longitude file must begin with array_med [($lonfile)]
 MESSAGE/ERROR ($usage)
 QUIT
ENDIF
IF `STRINDEX("($latfile)","array_med") NE 1` THEN
 MESSAGE/ERROR ERROR: Latitude file must begin with array_med [($latfile)]
 MESSAGE/ERROR ($usage)
 QUIT
ENDIF

! Load variable set
FILE/COLUMNS=7/SKIP=1/FORM=delim\
/VAR=names,titles,minvals,maxvals,steps,minoutliers,maxoutliers \
$1
LOAD/PERMANENT names

! Parse Data Filename
DEFINE SYMBOL ext    `STRRINDEX("($datfile)",".nc")`
DEFINE SYMBOL sub    `SUBSTRING("($datfile)",11,($ext)-11)`
DEFINE SYMBOL fnd    `STRINDEX("($sub)","_")`
DEFINE SYMBOL datcpl `SUBSTRING("($sub)",1,($fnd)-1)`
DEFINE SYMBOL len    `STRLEN("($sub)")`
DEFINE SYMBOL sub    `SUBSTRING("($sub)",($fnd)+1,($len)-($fnd)+1)`
DEFINE SYMBOL fnd    `STRINDEX("($sub)","_")`
DEFINE SYMBOL datcmp `UPCASE(SUBSTRING("($sub)",1,($fnd)-1))`
DEFINE SYMBOL len    `STRLEN("($sub)")`
DEFINE SYMBOL datfld `SUBSTRING("($sub)",($fnd)+1,($len)-($fnd)+1)`
! Parse Longitude Filename
DEFINE SYMBOL ext    `STRRINDEX("($lonfile)",".nc")`
DEFINE SYMBOL sub    `SUBSTRING("($lonfile)",11,($ext)-11)`
DEFINE SYMBOL fnd    `STRINDEX("($sub)","_")`
DEFINE SYMBOL loncmp `UPCASE(SUBSTRING("($sub)",1,($fnd)-1))`
DEFINE SYMBOL len    `STRLEN("($sub)")`
DEFINE SYMBOL loncor `SUBSTRING("($sub)",($fnd)+1,($len)-($fnd)+1)`
! Parse Latitude Filename
DEFINE SYMBOL ext    `STRRINDEX("($latfile)",".nc")`
DEFINE SYMBOL sub    `SUBSTRING("($latfile)",11,($ext)-11)`
DEFINE SYMBOL fnd    `STRINDEX("($sub)","_")`
DEFINE SYMBOL latcmp `UPCASE(SUBSTRING("($sub)",1,($fnd)-1))`
DEFINE SYMBOL len    `STRLEN("($sub)")`
DEFINE SYMBOL latcor `SUBSTRING("($sub)",($fnd)+1,($len)-($fnd)+1)`

CANCEL SYMBOL ext
CANCEL SYMBOL len
CANCEL SYMBOL fnd
CANCEL SYMBOL sub

! Load Data
USE $2

! Load Coordinates
USE $3
SET VARIABLE/TITLE="Longitude" ($lonvar)[d=3]
USE $4
SET VARIABLE/TITLE="Latitude" ($latvar)[d=4]

! Print datasets
SHOW DATA/BRIEF

DEFINE SYMBOL vari `ELEMENT_INDEX_STR("($datfld)",names[d=1])`
IF ($vari) THEN
 DEFINE SYMBOL varname `names[d=1,x=($vari)]`
ELSE
 MESSAGE/ERROR ERROR: Variable [($datfld)] missing in ($varfile)
 QUIT
ENDIF
DEFINE SYMBOL vartitle `titles[d=1,x=($vari)]`
DEFINE SYMBOL varlevels (`minoutliers[d=1,x=($vari)]`),\
(`minvals[d=1,x=($vari)]`,`maxvals[d=1,x=($vari)]`,`steps[d=1,x=($vari)]`),\
(`maxoutliers[d=1,x=($vari)]`)
DEFINE SYMBOL varksize `($varname)[d=2],return=ksize`
DEFINE SYMBOL varlsize `($varname)[d=2],return=lsize`
DEFINE SYMBOL varunits "UNITS=`($varname)[d=2],return=units`"
IF `($slice) GT ($varksize)` THEN
IF `($slice) GT ($varlsize)` THEN
 MESSAGE/ERROR ERROR: Variable slice is out of bounds [($slice)]
 QUIT
ELSE
DEFINE SYMBOL varslice K=1/L=($slice)
ENDIF
ELSE
DEFINE SYMBOL varslice K=($slice)/L=1
ENDIF

DEFINE SYMBOL outfile shade_MED_($datcpl)_($datcmp)_($datfld)_($slice).gif
DEFINE SYMBOL label  Mediator ($datcpl) ($datcmp) ($datfld) ($varunits) (($slice))

! Create SHADE plots for single level forcing variables
SAY *** Plotting ($varname) at ($varslice) scale ($varlevels) ***
SET VARIABLE/BAD=-9999/TITLE="($vartitle)" ($varname)[d=2]
SHADE/LEVELS="($varlevels)"/KEY=CONTINUOUS/($varslice)/TITLE="($label)"\
 ($varname)[d=2], ($lonvar)[d=3], ($latvar)[d=4]
FRAME/FILE=($outfile)

exit
