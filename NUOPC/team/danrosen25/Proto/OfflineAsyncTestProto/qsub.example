#!/bin/ksh --login
#------------------------------------------------------------------------------#
# batch directives
#------------------------------------------------------------------------------#
#PBS -S /bin/ksh
#PBS -A PROJECT_ACCOUNT
#PBS -N asyncIoTestProto
#PBS -o asyncIoTestProto.log
#PBS -j oe
#PBS -m abe
#PBS -l walltime=00:30:00
#PBS -l select=1:ncpus=32
#PBS -l place=scatter:excl
#PBS -q standard
#PBS -W umask=0027

cd $PBS_O_WORKDIR

# Load modules and setup runtime environment
# module load intel hdf5 netcdf
# module list

export NP=$PBS_NP
export RUNDIR=`pwd`

# Enable FORTRAN RTL core dumps for severe run time failures
#export decfort_dump_flag=y

# Enable runtime compliance checker
#export ESMF_RUNTIME_COMPLIANCECHECK=ON:depth=4

# Enable runtime trace output
export ESMF_RUNTIME_TRACE=ON
#export ESMF_RUNTIME_TRACE_PETLIST="0"

# Set resource usage limits
ulimit -c unlimited #coredumpsize
ulimit -s unlimited #stacksize
ulimit -t unlimited #cputime
ulimit -d unlimited #datasize
ulimit -m unlimited #memoryuse

# Run single test using mpirun
# echo "Model started offlineApp:  " `date`
# mpirun -n 32 ./offlineApp.exe
# echo "Model ended offlineApp:    " `date`

# Run multiple tests using mpirun
mkdir -p $RUNDIR/gather
cd $RUNDIR/gather
echo "Model started gather:  " `date`
start=$SECONDS
mpirun -n 32 ../offlineApp.exe ../runconfig.gather > run.log 2>&1
elapsed=$SECONDS-start
printf 'Model ended gather: Elapsed %d:%02d:%02d\n' \
  $((elapsed / 3600)) $((elapsed / 60 % 60)) $((elapsed % 60))

mkdir -p $RUNDIR/parallel
cd $RUNDIR/parallel
echo "Model started parallel:  " `date`
start=$SECONDS
mpirun -n 32 ../offlineApp.exe ../runconfig.parallel > run.log 2>&1
elapsed=$SECONDS-start
printf 'Model ended parallel: Elapsed %d:%02d:%02d\n' \
  $((elapsed / 3600)) $((elapsed / 60 % 60)) $((elapsed % 60))

mkdir -p $RUNDIR/esmf
cd $RUNDIR/esmf
echo "Model started esmf:  " `date`
start=$SECONDS
mpirun -n 32 ../offlineApp.exe ../runconfig.esmf > run.log 2>&1
elapsed=$SECONDS-start
printf 'Model ended esmf: Elapsed %d:%02d:%02d\n' \
  $((elapsed / 3600)) $((elapsed / 60 % 60)) $((elapsed % 60))

#mkdir -p $RUNDIR/async
#cd $RUNDIR/async
#echo "Model started async:  " `date`
#start=$SECONDS
#mpirun -n 32 ../offlineApp.exe ../runconfig.async > run.log 2>&1
#elapsed=$SECONDS-start
#printf 'Model ended async: Elapsed %d:%02d:%02d\n' \
#  $((elapsed / 3600)) $((elapsed / 60 % 60)) $((elapsed % 60))

#mkdir -p $RUNDIR/asyncPar
#cd $RUNDIR/asyncPar
#echo "Model started asyncPar:  " `date`
#start=$SECONDS
#mpirun -n 32 ../offlineApp.exe ../runconfig.asyncPar > run.log 2>&1
#elapsed=$SECONDS-start
#printf 'Model ended asyncPar: Elapsed %d:%02d:%02d\n' \
#  $((elapsed / 3600)) $((elapsed / 60 % 60)) $((elapsed % 60))

exit
