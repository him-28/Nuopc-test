# GNU Makefile template for user ESMF application

################################################################################
################################################################################
## This Makefile must be able to find the "esmf.mk" Makefile fragment in the  ##
## 'include' line below. Following the ESMF User's Guide, a complete ESMF     ##
## installation should ensure that a single environment variable "ESMFMKFILE" ##
## is made available on the system. This variable should point to the         ##
## "esmf.mk" file.                                                            ##
##                                                                            ##
## This example Makefile uses the "ESMFMKFILE" environment variable.          ##
##                                                                            ##
## If you notice that this Makefile cannot find variable ESMFMKFILE then      ##
## please contact the person responsible for the ESMF installation on your    ##
## system.                                                                    ##
## As a work-around you can simply hardcode the path to "esmf.mk" in the      ##
## include line below. However, doing so will render this Makefile a lot less ##
## flexible and non-portable.                                                 ##
################################################################################

HR    := ========================================
HR    := $(HR)$(HR)
COMMA := ,
DIR   := $(CURDIR)

ifneq ($(origin ESMFMKFILE), environment)
$(error Environment variable ESMFMKFILE was not set.)
endif

include $(ESMFMKFILE)

MODEL_OBJS := model_drv.o model_fld.o model_dom.o
MODEL_MODS := model_drv_mod.mod model_fld_mod.mod model_dom_mod.mod
MODEL_LIB  := libmodel.a

# -----------------------------------------------------------------------------
# Dependencies
# -----------------------------------------------------------------------------

model_drv.o: model_fld.o model_dom.o
model_fld.o: model_dom.o

################################################################################
################################################################################

# -----------------------------------------------------------------------------
# Compiler Arguments
# -----------------------------------------------------------------------------

.SUFFIXES: .f90 .F90 .c .C

%.o : %.f90
	@echo $(HR)
	@echo "Compiling $@"
	$(ESMF_F90COMPILER) -c $(ESMF_F90COMPILEOPTS) $(ESMF_F90COMPILEPATHS) $(ESMF_F90COMPILEFREENOCPP) $<

%.o : %.F90
	@echo $(HR)
	@echo "Compiling $@"
	$(ESMF_F90COMPILER) -c $(ESMF_F90COMPILEOPTS) $(ESMF_F90COMPILEPATHS) $(ESMF_F90COMPILEFREECPP) $(ESMF_F90COMPILECPPFLAGS) -DESMF_VERSION_MAJOR=$(ESMF_VERSION_MAJOR) $<

%.o : %.c
	@echo $(HR)
	@echo "Compiling $@"
	$(ESMF_CXXCOMPILER) -c $(ESMF_CXXCOMPILEOPTS) $(ESMF_CXXCOMPILEPATHSLOCAL) $(ESMF_CXXCOMPILEPATHS) $(ESMF_CXXCOMPILECPPFLAGS) $<

%.o : %.C
	@echo $(HR)
	@echo "Compiling $@"
	$(ESMF_CXXCOMPILER) -c $(ESMF_CXXCOMPILEOPTS) $(ESMF_CXXCOMPILEPATHSLOCAL) $(ESMF_CXXCOMPILEPATHS) $(ESMF_CXXCOMPILECPPFLAGS) $<

# -----------------------------------------------------------------------------
# Build Targets
# -----------------------------------------------------------------------------

all: $(MODEL_LIB)

$(MODEL_LIB): $(MODEL_OBJS)
	ar cq $@ $^

# -----------------------------------------------------------------------------
# Clean Targets
# -----------------------------------------------------------------------------
.PHONY: clean

clean:
	@echo $(HR)
	@echo "Removing Model Files"
	rm -f $(MODEL_LIB) $(MODEL_MODS) $(MODEL_OBJS)

