README for COAMPS prototype
---------------------------------------------------

Dependencies: 
  - ESMF v6.1.0bs08
  

Build:
  - Set environment variable ESMFMKFILE to point to the esmf.mk of your ESMF installation.
  - gmake [BOPT=<g|O>]
  - Compile time control of model component modules included in driver (drv.F90) is
    determined by the INCLUDE_<MOD> (MOD = MED, ATM, OCN, WAV, ICE, LND) preprocessor macros.
  

Execution:
  - Optionally set environment variable ESMF_RUNTIME_COMPLIANCECHECK to ON.
    This can be done by setting CHECK=ON on gmake run command line.
  - Optionally set number of processors on command line: NPROC=<nproc>.
    Default nproc is 1.
  - Optionally set name of config file on command line: CONFIG=<config>.
    Default is default.rc
  - gmake run [NPROC=<nproc>] [CONFIG=<config>] [CHECK=<ON|OFF>]
  

Output:
  - PET*.Log files containing compliance checker output if turned on.
  - The prototype outputs time stepping information to stdout.


Code structure:
  - Makefile    - Makefile that is based on the standard esmf.mk mechanism
  - mainApp.F90 - Main application cap
  - drv.F90     - The Driver component, specializing generic NUOPC_Driver
  - con.F90     - The Connector component, specializing generic NUOPC_Connector
  - med.F90     - The Mediator component, specializing generic NUOPC_Mediator
  - mod.F90     - The Model component(s), specializing generic NUOPC_Model


ESMF Config input for ESM Driver:

  Note that config input labels for models not included at compile time are silently ignored.

  label                                possible
  (colons required)    type            values        default     description
  ------------------------------------------------------------------------------
  start_time:          integer array                 none        start time of ESM driver
                       [YYYY,MM,DD,hh,mm,ss]                     * required

  stop_time:           integer array                 none        stop time of ESM driver
                       [YYYY,MM,DD,hh,mm,ss]                     * required

  time_step:           integer array                 none        time step of ESM driver
                       [hh,mm,ss]                                * required

  verbose:             logical         t, f          t           turn on verbose output
                                                                 * optional

  <MOD>_active:        logical         t, f          t           enable/disable <MOD> model
                                                                 * MOD = MED, ATM, OCN, WAV, ICE, LND
                                                                 * optional

  pet_layout_option:   string          sequential    sequential  set the type of PET layout
                                       concurrent                * optional
                                       specified                 * sequential:
                                                                     active models defined on all PETs
                                                                     no other config options required
                                                                 * concurrent:
                                                                     active models defined on non-overlapping sets of PETs
                                                                     requires <MOD>_pet_count input for active models
                                                                     medPetCount optional, default is MED defined on all PETs
                                                                     sum(<MOD>_pet_count) <= petCount
                                                                 * specified:
                                                                     active models defined on specified sets of PETs
                                                                     requires <MOD>_pet_list input for active models
                                                                     medPetList optional, default is MED defined on all PETs

  MED_pet_count:       integer         [1,petCount)  none        number of PETs for MED model
                                                                 * optional when petLayoutOption = concurrent
                                                                   & MED_active = t

  <MOD>_pet_count:     integer         [1,petCount)  none        number of PETs for <MOD> model
                                                                 * MOD = ATM, OCN, WAV, ICE, LND
                                                                 * required when petLayoutOption = concurrent
                                                                   & <MOD>_active = t

  MED_pet_list::       integer table   [0:petCount)  none        PET list for MED model
                                                                 * optional when pet_layout_option = specified
                                                                   & MED_active = t
                                                                 * min(MED_pet_list) >= 0 && max(MED_pet_list) < petCount
                                                                 * table must be terminated with :: on single line

  <MOD>_pet_list::     integer table   [0:petCount)  none        PET list for <MOD> model
                                                                 * MOD = ATM, OCN, WAV, ICE, LND
                                                                 * required when pet_layout_option = specified
                                                                   & <MOD>_active = t
                                                                 * min(<MOD>_pet_list) >= 0 && max(<MOD>_pet_list) < petCount
                                                                 * table must be terminated with :: on single line
